{"pageProps":{"post":{"attributes":{},"html":"<h1 id=\"creating-product-details\">Creating Product Details</h1>\n<p>Edit <code>services/Menu.js</code> and add the following function</p>\n<pre><code class=\"language-js\">export async function getProductById(id) {\n    if (app.store.menu==null) {\n        await loadData();\n    }\n    for (let c of app.store.menu) {\n        for (let p of c.products) {\n            if (p.id==id) {\n                return p;\n            }\n        }\n    }\n    return null;\n}\n</code></pre>\n<p>Edit <code>components/DetailsPage.js</code> and replace it with this code</p>\n<pre><code class=\"language-js\">import { getProductById } from &#39;../services/Menu.js&#39;;\n\nexport default class DetailsPage extends HTMLElement {\n\n    constructor() {\n        super();\n    \n        this.root = this.attachShadow({ mode: &quot;open&quot; });\n    \n        const template = document.getElementById(&quot;details-page-template&quot;);\n        const content = template.content.cloneNode(true);\n        const styles = document.createElement(&quot;style&quot;);\n        this.root.appendChild(content);    \n        this.root.appendChild(styles);\n\n        async function loadCSS() {\n          const request = await fetch(&quot;/components/DetailsPage.css&quot;);\n          styles.textContent = await request.text();\n        }\n        loadCSS();\n    }   \n\n    async renderData() {\n        if (this.dataset.productId) {\n            this.product = await getProductById(this.dataset.productId);\n            this.root.querySelector(&quot;h2&quot;).textContent = this.product.name;\n            this.root.querySelector(&quot;img&quot;).src = `/data/images/${this.product.image}`;\n            this.root.querySelector(&quot;.description&quot;).textContent = this.product.description;\n            this.root.querySelector(&quot;.price&quot;).textContent = `$ ${this.product.price.toFixed(2)} ea`\n            this.root.querySelector(&quot;button&quot;).addEventListener(&quot;click&quot;, ()=&gt; {\n                // TODO addToCart(this.product.id); \n                app.router.go(&#39;/order&#39;);\n            })\n        } else {\n            alert(&quot;Invalid Product ID&quot;);\n        }\n    }\n\n    connectedCallback() {\n        this.renderData();\n    }\n\n}\n\ncustomElements.define(&quot;details-page&quot;, DetailsPage);\n</code></pre>\n","slug":"creating-product-details","title":"Creating Product Details","section":"Reactive Programming","icon":"chain","filePath":"/Users/firt/Library/Mobile Documents/com~apple~CloudDocs/Trainings/FEM/YDNTL/vanilla/lessons/05-reactive-programming/D-creating-product-details.md","nextSlug":"/vanilla/lessons/reactive-programming/setting-up-order","prevSlug":"/vanilla/lessons/reactive-programming/creating-product-item-component"}},"__N_SSG":true}